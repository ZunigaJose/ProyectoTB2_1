/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyecto1_tb2_josezuniga31841432;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.MongoClientSettings;
import com.mongodb.ConnectionString;
import com.mongodb.ServerAddress;
import com.mongodb.MongoCredential;
import com.mongodb.MongoClientSettings;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import static com.mongodb.client.model.Filters.and;
import static com.mongodb.client.model.Filters.eq;
import java.awt.event.ItemEvent;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.bson.Document;
import static org.bson.codecs.configuration.CodecRegistries.fromProviders;
import static org.bson.codecs.configuration.CodecRegistries.fromRegistries;
import org.bson.codecs.configuration.CodecRegistry;
import org.bson.codecs.pojo.PojoCodecProvider;
import org.bson.conversions.Bson;


/**
 *
 * @author josez
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    MongoClient mongoClient = null;
    MongoDatabase database = null;
    MongoCollection<Alumno> clAlumno = null;
    Alumno alumnoIngresado = null;
    MongoCollection<Clase> clClase = null;
    MongoCollection<Pregunta> clPregunta = null;
    MongoCollection<Examen> clExamen = null;
    boolean flagModificacion = false;
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        ConnectionString connString = new ConnectionString(System.getenv("MongoURI"));
        CodecRegistry pojoCodecRegistry = fromProviders(PojoCodecProvider.builder().automatic(true).build());
        CodecRegistry codecRegistry = fromRegistries(MongoClientSettings.getDefaultCodecRegistry(), pojoCodecRegistry);
        MongoClientSettings settings = MongoClientSettings.builder()
                .applyConnectionString(connString)
                .codecRegistry(codecRegistry)
                .retryWrites(true)
                .build();
        mongoClient = MongoClients.create(settings);
        database = mongoClient.getDatabase("TB2Proyecto");
        clAlumno = database.getCollection("Alumno", Alumno.class);
        clClase = database.getCollection("Clases", Clase.class);
        clPregunta = database.getCollection("Preguntas", Pregunta.class);
        clExamen = database.getCollection("Examenes", Examen.class);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pantallaRegistro = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        registroNombre = new javax.swing.JTextField();
        registroLogin = new javax.swing.JTextField();
        registroPass = new javax.swing.JPasswordField();
        registroRegistrar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        panelAdmin = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        labelDetallePregunta = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        nuevaClaseNombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        añadirClase = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        cb_preguntasSelectClase = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tituloPregunta = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descripcionPregunta = new javax.swing.JTextArea();
        añadirPregunta = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        creaVerdadero = new javax.swing.JRadioButton();
        creaFalso = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        crearExamenSpinner = new javax.swing.JSpinner();
        cb_ExamenesSelectClase = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        pantallaExamen = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        labelTituloExamen = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        labelPreguntaExamen = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        principalIngresar = new javax.swing.JButton();
        princilalRegistro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        principalPassword = new javax.swing.JPasswordField();
        principalLogin = new javax.swing.JTextField();

        jLabel2.setText("Nombre Completo:");

        jLabel3.setText("Login:");

        jLabel4.setText("Contraseña:");

        registroRegistrar.setText("Registrar");
        registroRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroRegistrarActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(registroNombre)
                    .addComponent(registroLogin)
                    .addComponent(registroPass, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(registroRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(registroNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(registroLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(registroPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registroRegistrar)
                    .addComponent(jButton1))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout pantallaRegistroLayout = new javax.swing.GroupLayout(pantallaRegistro.getContentPane());
        pantallaRegistro.getContentPane().setLayout(pantallaRegistroLayout);
        pantallaRegistroLayout.setHorizontalGroup(
            pantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pantallaRegistroLayout.setVerticalGroup(
            pantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelAdmin.setResizable(false);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTree1);

        jLabel13.setText("Seleccione una pregunta para saber sus detalles");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(labelDetallePregunta, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(labelDetallePregunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(4, 4, 4)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(28, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Listado de Clases", jPanel3);

        jLabel9.setText("Nombre de la Clase");

        añadirClase.setText("Registrar");
        añadirClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirClaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(añadirClase)
                    .addComponent(jLabel9)
                    .addComponent(nuevaClaseNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(280, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nuevaClaseNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(añadirClase)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Crear nuevas clases", jPanel4);

        jLabel6.setText("Seleccione la Clase:");

        jLabel7.setText("Titulo");

        tituloPregunta.setColumns(20);
        tituloPregunta.setRows(5);
        tituloPregunta.setWrapStyleWord(true);
        jScrollPane1.setViewportView(tituloPregunta);

        jLabel8.setText("Descripcion");

        descripcionPregunta.setColumns(20);
        descripcionPregunta.setLineWrap(true);
        descripcionPregunta.setRows(5);
        descripcionPregunta.setWrapStyleWord(true);
        jScrollPane2.setViewportView(descripcionPregunta);

        añadirPregunta.setText("Agregar Pregunta");
        añadirPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirPreguntaActionPerformed(evt);
            }
        });

        jLabel11.setText("Tipo");

        buttonGroup1.add(creaVerdadero);
        creaVerdadero.setText("Verdadero");

        buttonGroup1.add(creaFalso);
        creaFalso.setText("Falso");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(creaVerdadero)
                                    .addComponent(creaFalso)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(cb_preguntasSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(añadirPregunta)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_preguntasSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(creaVerdadero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(creaFalso)))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(añadirPregunta)
                .addGap(42, 42, 42))
        );

        jTabbedPane1.addTab("Agregar Preguntas", jPanel5);

        jLabel10.setText("Clase:");

        jLabel12.setText("Cantidad de Preguntas");

        crearExamenSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        cb_ExamenesSelectClase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_ExamenesSelectClaseItemStateChanged(evt);
            }
        });

        jButton2.setText("Crear Examen");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(crearExamenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_ExamenesSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jButton2)))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(cb_ExamenesSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(crearExamenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(104, 104, 104))
        );

        jTabbedPane1.addTab("Crear Examen", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        panelAdmin.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout panelAdminLayout = new javax.swing.GroupLayout(panelAdmin.getContentPane());
        panelAdmin.getContentPane().setLayout(panelAdminLayout);
        panelAdminLayout.setHorizontalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelAdminLayout.setVerticalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelPreguntaExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelPreguntaExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );

        jButton3.setText("Siguiente Pregunta");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("¡Pasar a la siguiente pregunta le impedira volver atras y cambiar su respuesta!");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTituloExamen)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel14)
                        .addGap(26, 26, 26)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(labelTituloExamen)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 131, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        javax.swing.GroupLayout pantallaExamenLayout = new javax.swing.GroupLayout(pantallaExamen.getContentPane());
        pantallaExamen.getContentPane().setLayout(pantallaExamenLayout);
        pantallaExamenLayout.setHorizontalGroup(
            pantallaExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pantallaExamenLayout.setVerticalGroup(
            pantallaExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pantallaExamenLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        principalIngresar.setText("Ingresar");
        principalIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principalIngresarActionPerformed(evt);
            }
        });

        princilalRegistro.setText("Registrarse");
        princilalRegistro.setName("principal.registro"); // NOI18N
        princilalRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                princilalRegistroActionPerformed(evt);
            }
        });

        jLabel1.setText("Login");

        jLabel5.setText("Password");

        principalLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principalLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(principalLogin)
                            .addComponent(principalPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(principalIngresar)
                        .addGap(72, 72, 72)
                        .addComponent(princilalRegistro)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(principalLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(principalPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(principalIngresar)
                    .addComponent(princilalRegistro))
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void princilalRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_princilalRegistroActionPerformed
        pantallaRegistro.pack();
        this.setVisible(false);
        pantallaRegistro.setModal(true);
        pantallaRegistro.setVisible(true);
    }//GEN-LAST:event_princilalRegistroActionPerformed

    private void registroRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroRegistrarActionPerformed
        String nombre, pass, login;
        int id = (int) clAlumno.countDocuments();
        nombre = registroNombre.getText();
        pass = registroPass.getText();
        login = registroLogin.getText();
        Alumno alumno = new Alumno(nombre, login, pass, id);
        try {
            clAlumno.insertOne(alumno);
        } catch (com.mongodb.MongoWriteException we) {
            String errormsg;
            if (we.getCode() == 11000) {
                errormsg = "El Login ingresado ya existe favor ingrese uno nuevo";
            } else {
                registroNombre.setText("");
                registroPass.setText("");
                errormsg = "Ocurrio un error al intentar ingresar el usuario, favor intente nuevamente";
            }
            registroLogin.setText("");
            JOptionPane.showMessageDialog(pantallaRegistro, errormsg, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_registroRegistrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<Document> databases = mongoClient.listDatabases().into(new ArrayList<>());
        databases.forEach(db -> System.out.println(db.toJson()));
        List<Alumno> prueba = clAlumno.find().into(new ArrayList<>());
        prueba.forEach(al -> System.out.println(al));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void principalIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principalIngresarActionPerformed
        String pass = null;
        try {
            pass = getUserPassword(principalLogin.getText());
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(pantallaRegistro, "Login no encontrado. Favor vuelva a intentar.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            principalLogin.setText("");
            principalPassword.setText("");
        } finally {
            if (pass != null) {
                if ((sha(principalPassword.getText())).equals(pass)) {
                    alumnoIngresado = clAlumno.find(eq("login", principalLogin.getText())).first();
                    if (alumnoIngresado.getLogin().equals("Admin")) {
                        panelAdmin.pack();
                        panelAdmin.setVisible(true);
                        this.setVisible(false);
                        llenarArbolClases();
                        //Bson Filter = and(eq("idClase", 2), eq("cantPreguntas", 1));
                        //examen.find(and(eq("idClase", 2), eq("cantPreguntas", 1))).projection(Filter).first().getnPreguntas();
                    }
                } else {
                    JOptionPane.showMessageDialog(pantallaRegistro, "Contraseña Incorrecta, Favor Vuelva a intentar.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    principalPassword.setText("");
                }
            }
        }
    }//GEN-LAST:event_principalIngresarActionPerformed

    private void principalLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principalLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_principalLoginActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex() == 2) {
            cb_preguntasSelectClase.setModel(llenarComboBoxClases());
        } else if(jTabbedPane1.getSelectedIndex() == 3) {
            cb_ExamenesSelectClase.setModel(llenarComboBoxClases());
            cb_ExamenesSelectClase.setSelectedItem(null);
        } else if (jTabbedPane1.getSelectedIndex() == 0 && flagModificacion) {
            llenarArbolClases();
            flagModificacion = false;
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void añadirClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirClaseActionPerformed
        String nombre = nuevaClaseNombre.getText();
        int id;
        id = (int) clClase.countDocuments() + 1;
        Clase clase = new Clase(id, nombre);
        try {
            clClase.insertOne(clase);
        } catch (com.mongodb.MongoWriteException we) {
            JOptionPane.showMessageDialog(pantallaRegistro, "Ocurrio un error al intentar crear la pregunta"
                    + ", Favor vuelva a intentar", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } finally {
            JOptionPane.showMessageDialog(pantallaRegistro, "Clase " + nombre + " fue creada exitosamente.",
                "Exito", JOptionPane.INFORMATION_MESSAGE);
            flagModificacion = true;
            nuevaClaseNombre.setText("");
        }
    }//GEN-LAST:event_añadirClaseActionPerformed

    private void añadirPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirPreguntaActionPerformed
        if (cb_preguntasSelectClase.getSelectedItem() != null) {
            if (tituloPregunta.getText().equals("")) {
                return;
            }
            if (descripcionPregunta.getText().equals("")) {
                return;
            }
            if (!creaFalso.isSelected() && !creaVerdadero.isSelected()) {
                return;
            }
            Clase clase = Clase.class.cast(cb_preguntasSelectClase.getSelectedItem());
            int id = (int) clPregunta.countDocuments() + 1;
            Pregunta preg = new Pregunta(id, clase.getIdClase(),
                tituloPregunta.getText(), descripcionPregunta.getText(), creaVerdadero.isSelected());
            try {
                clPregunta.insertOne(preg);
            } catch (com.mongodb.MongoWriteException we) {
                JOptionPane.showMessageDialog(pantallaRegistro, "No fue posible guardar la pregunta, Favor"
                        + " vuelva a intentar", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(pantallaRegistro, "Pregunta añadida exitosamente",
                "Exito", JOptionPane.INFORMATION_MESSAGE);
            flagModificacion = true;
            tituloPregunta.setText("");
            descripcionPregunta.setText("");
            cb_preguntasSelectClase.setSelectedItem(null);
            buttonGroup1.clearSelection();
        }
    }//GEN-LAST:event_añadirPreguntaActionPerformed

    private void cb_ExamenesSelectClaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_ExamenesSelectClaseItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (cb_ExamenesSelectClase.getSelectedItem() != null) {
                List list = clPregunta.find(eq("idClase",
                        Clase.class.cast(cb_ExamenesSelectClase.getSelectedItem()).getIdClase()))
                        .into(new ArrayList<>());
                int currValue = (int) crearExamenSpinner.getModel().getValue();
                if (currValue > list.size()) {
                    currValue = list.size();
                } else if (currValue == 0 && currValue != list.size()) {
                    currValue = 1;
                }
                int min = list.isEmpty() ? 0 : 1;
                SpinnerNumberModel modelo = new SpinnerNumberModel(currValue, min, list.size(), 1);
                crearExamenSpinner.setModel(modelo);
            }
        }
    }//GEN-LAST:event_cb_ExamenesSelectClaseItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (cb_ExamenesSelectClase.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(pantallaRegistro, "Debe de seleccionar una clase de las clases "
                    + " disponibles", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if ((int) crearExamenSpinner.getModel().getValue() == 0) {
            JOptionPane.showMessageDialog(pantallaRegistro, "La Clase seleccionada no tiene preguntas "
                    + "disponibles. O añada preguntas o seleccione otra clase.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int idex = (int) clExamen.countDocuments() + 1;
        Examen examen = new Examen(idex,
                Clase.class.cast(cb_ExamenesSelectClase.getSelectedItem()).getIdClase(),
                (int) crearExamenSpinner.getModel().getValue());
        try {
            clExamen.insertOne(examen);
        } catch (com.mongodb.MongoWriteException we) {
            String errormsg;
            if (we.getCode() == 11000) {
                errormsg = "Actualmente ya existe un examen creado para la clase " + 
                        Examen.class.cast(cb_ExamenesSelectClase.getSelectedItem());
            } else {
                registroNombre.setText("");
                registroPass.setText("");
                errormsg = "Ocurrio un error al intentar ingresar el usuario, favor intente nuevamente";
                return;
            }
        } finally {
            JOptionPane.showMessageDialog(pantallaRegistro, "Pregunta añadida exitosamente",
                "Exito", JOptionPane.INFORMATION_MESSAGE);
            flagModificacion = true;
        }
        cb_ExamenesSelectClase.setSelectedItem(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        if (evt.isMetaDown()) {
            int row = jTree1.getClosestRowForLocation(evt.getX(), evt.getY());
            jTree1.setSelectionRow(row);
            Object v1 = jTree1.getSelectionPath().getLastPathComponent();
            DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) v1;
            if (nodoSeleccionado.getUserObject() instanceof Pregunta) {
                Pregunta pregunta = ((Pregunta) nodoSeleccionado.getUserObject());
                labelDetallePregunta.setText("<html>" + 
                        pregunta.getDescripcion() + "<br>" + "Respuesta: " + 
                        (pregunta.isTipo() ? "Verdadero" : "Falso" + "</html>"));
            } else {
                labelDetallePregunta.setText("");
            }
        }
    }//GEN-LAST:event_jTree1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton añadirClase;
    private javax.swing.JButton añadirPregunta;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<Clase> cb_ExamenesSelectClase;
    private javax.swing.JComboBox<Clase> cb_preguntasSelectClase;
    private javax.swing.JRadioButton creaFalso;
    private javax.swing.JRadioButton creaVerdadero;
    private javax.swing.JSpinner crearExamenSpinner;
    private javax.swing.JTextArea descripcionPregunta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel labelDetallePregunta;
    private javax.swing.JLabel labelPreguntaExamen;
    private javax.swing.JLabel labelTituloExamen;
    private javax.swing.JTextField nuevaClaseNombre;
    private javax.swing.JDialog panelAdmin;
    private javax.swing.JDialog pantallaExamen;
    private javax.swing.JDialog pantallaRegistro;
    private javax.swing.JButton princilalRegistro;
    private javax.swing.JButton principalIngresar;
    private javax.swing.JTextField principalLogin;
    private javax.swing.JPasswordField principalPassword;
    private javax.swing.JTextField registroLogin;
    private javax.swing.JTextField registroNombre;
    private javax.swing.JPasswordField registroPass;
    private javax.swing.JButton registroRegistrar;
    private javax.swing.JTextArea tituloPregunta;
    // End of variables declaration//GEN-END:variables
    
    String getUserPassword(String user) throws NullPointerException {
        return clAlumno.find(eq("login", user)).first().getPass();
    }
    
    String sha(String pass){
        final MessageDigest digest;
        try {
            digest = MessageDigest.getInstance("SHA3-256");
            final byte[] hashbytes = digest.digest(
                pass.getBytes(StandardCharsets.UTF_8));
            String sha3Hex;
            sha3Hex = bytesToHex(hashbytes);
            return sha3Hex;
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Alumno.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }
    
    String bytesToHex(byte[] hash) {
        StringBuilder hexString = new StringBuilder(2 * hash.length);
        for (int i = 0; i < hash.length; i++) {
            String hex = Integer.toHexString(0xff & hash[i]);
            if (hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        return hexString.toString();
    }
    
    DefaultComboBoxModel llenarComboBoxClases() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        ArrayList<Clase> clases = clClase.find().into(new ArrayList<>());
        clases.forEach(clase -> modelo.addElement(clase));
        return modelo;
    }
    
    Stack<Pregunta> generarExamen(int idClase) {
        Bson filter = eq("idClase", idClase);
        int cantPreguntas = 0;
        try {
            cantPreguntas = clExamen.find(filter).first().getnPreguntas();
        } catch (Exception e) {
            
        }
        List preguntas = 
                clPregunta.find(filter).into(new ArrayList<>());
        Collections.shuffle(preguntas);
        Stack<Pregunta> stck = new Stack<>();
        stck.addAll(preguntas.subList(0, cantPreguntas));
        return stck;
    }
    
    void llenarArbolClases() {
        ArrayList<Clase> clases = clClase.find().into(new ArrayList<Clase>());
        //ArrayList<Examen> examenes = clExamen.find().into(new ArrayList<Examen>());
        //ArrayList<Pregunta> preguntas = clPregunta.find().into(new ArrayList<Pregunta>());
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Clases");
        DefaultTreeModel modelo = new DefaultTreeModel(root);
        clases.forEach(clase -> root.add(new DefaultMutableTreeNode(clase)));
        for (int i = 0; i < root.getChildCount(); i++) {
            ArrayList<Pregunta> preguntas = clPregunta.find(eq("idClase",
                    ((Clase)(((DefaultMutableTreeNode)root.getChildAt(i)).getUserObject())).getIdClase()))
                    .into(new ArrayList<Pregunta>());
            if (!preguntas.isEmpty()) {
                DefaultMutableTreeNode preg = new DefaultMutableTreeNode("Preguntas");
                preguntas.forEach(pregunta -> preg.add(new DefaultMutableTreeNode(pregunta)));
                ((DefaultMutableTreeNode)root.getChildAt(i)).add(preg);
            }
            Examen ex = clExamen.find(eq("idClase",
                    ((Clase)((DefaultMutableTreeNode)root.getChildAt(i)).getUserObject()).getIdClase()))
                    .first();
            if (ex != null) {
                DefaultMutableTreeNode exa = new DefaultMutableTreeNode("Examen");
                exa.add(new DefaultMutableTreeNode(ex));
                ((DefaultMutableTreeNode)root.getChildAt(i)).add(exa);
            }
        }
        modelo.reload();
        jTree1.setModel(modelo);
    }
}
