/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyecto1_tb2_josezuniga31841432;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import com.mongodb.ConnectionString;
import com.mongodb.MongoClientSettings;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import static com.mongodb.client.model.Aggregates.lookup;
import static com.mongodb.client.model.Filters.eq;
import com.mongodb.client.model.FindOneAndReplaceOptions;
import com.mongodb.client.model.ReturnDocument;
import java.awt.event.ItemEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.bson.Document;
import static org.bson.codecs.configuration.CodecRegistries.fromProviders;
import static org.bson.codecs.configuration.CodecRegistries.fromRegistries;
import org.bson.codecs.configuration.CodecRegistry;
import org.bson.codecs.pojo.PojoCodecProvider;
import org.bson.conversions.Bson;


/**
 *
 * @author josez
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    MongoClient mongoClient = null;
    MongoDatabase database = null;
    MongoCollection<Alumno> clAlumno = null;
    Alumno alumnoIngresado = null;
    MongoCollection<Clase> clClase = null;
    MongoCollection<Pregunta> clPregunta = null;
    MongoCollection<Examen> clExamen = null;
    boolean flagModificacion = false;
    Stack<Pregunta> preguntas = null;
    final double puntosPorpregunta = 5;
    
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        ConnectionString connString = new ConnectionString(System.getenv("MongoURI"));
        CodecRegistry pojoCodecRegistry = fromProviders(PojoCodecProvider.builder().automatic(true).build());
        CodecRegistry codecRegistry = fromRegistries(MongoClientSettings.getDefaultCodecRegistry(), pojoCodecRegistry);
        MongoClientSettings settings = MongoClientSettings.builder()
                .applyConnectionString(connString)
                .codecRegistry(codecRegistry)
                .retryWrites(true)
                .build();
        mongoClient = MongoClients.create(settings);
        database = mongoClient.getDatabase("TB2Proyecto");
        clAlumno = database.getCollection("Alumno", Alumno.class);
        clClase = database.getCollection("Clases", Clase.class);
        clPregunta = database.getCollection("Preguntas", Pregunta.class);
        clExamen = database.getCollection("Examenes", Examen.class);
        //generateMap();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pantallaRegistro = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        registroNombre = new javax.swing.JTextField();
        registroLogin = new javax.swing.JTextField();
        registroPass = new javax.swing.JPasswordField();
        registroRegistrar = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        panelAdmin = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        labelDetallePregunta = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        nuevaClaseNombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        añadirClase = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        cb_preguntasSelectClase = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tituloPregunta = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descripcionPregunta = new javax.swing.JTextArea();
        añadirPregunta = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        creaVerdadero = new javax.swing.JRadioButton();
        creaFalso = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        crearExamenSpinner = new javax.swing.JSpinner();
        cb_ExamenesSelectClase = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        pantallaAlumno = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlistDisponibles = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jlistTomados = new javax.swing.JList<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        labelNombreAlumno = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        pantallaExamen = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        examenNext = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        labelNPregunta = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        labelPreguntaExamen = new javax.swing.JLabel();
        labelTitPregunta = new javax.swing.JLabel();
        jrbTrue = new javax.swing.JRadioButton();
        jrbFalse = new javax.swing.JRadioButton();
        bgroupExamen = new javax.swing.ButtonGroup();
        detalleNota = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        detallNotaList = new javax.swing.JList<>();
        principalIngresar = new javax.swing.JButton();
        princilalRegistro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        principalPassword = new javax.swing.JPasswordField();
        principalLogin = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nombre.png"))); // NOI18N
        jLabel2.setText("Nombre Completo:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user.png"))); // NOI18N
        jLabel3.setText("Login:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pass.png"))); // NOI18N
        jLabel4.setText("Contraseña:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));
        jPanel1.add(registroNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 180, -1));
        jPanel1.add(registroLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 180, -1));
        jPanel1.add(registroPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 180, -1));

        registroRegistrar.setText("Registrar");
        registroRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(registroRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 287, -1, -1));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bground.jpg"))); // NOI18N
        jLabel21.setText("jLabel21");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -50, 450, 430));

        javax.swing.GroupLayout pantallaRegistroLayout = new javax.swing.GroupLayout(pantallaRegistro.getContentPane());
        pantallaRegistro.getContentPane().setLayout(pantallaRegistroLayout);
        pantallaRegistroLayout.setHorizontalGroup(
            pantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pantallaRegistroLayout.setVerticalGroup(
            pantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panelAdmin.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        panelAdmin.setResizable(false);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTree1);

        jLabel13.setText("Seleccione una pregunta para saber sus detalles");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(labelDetallePregunta, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(labelDetallePregunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(4, 4, 4)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(49, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Listado de Clases", jPanel3);

        jLabel9.setText("Nombre de la Clase");

        añadirClase.setText("Registrar");
        añadirClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirClaseActionPerformed(evt);
            }
        });

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clase.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(añadirClase)
                            .addComponent(jLabel9))
                        .addContainerGap(514, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(nuevaClaseNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel22)
                        .addGap(124, 124, 124))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nuevaClaseNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel22)))
                .addGap(24, 24, 24)
                .addComponent(añadirClase)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Crear nuevas clases", jPanel4);

        jLabel6.setText("Seleccione la Clase:");

        jLabel7.setText("Titulo");

        tituloPregunta.setColumns(20);
        tituloPregunta.setRows(5);
        tituloPregunta.setWrapStyleWord(true);
        jScrollPane1.setViewportView(tituloPregunta);

        jLabel8.setText("Descripcion");

        descripcionPregunta.setColumns(20);
        descripcionPregunta.setLineWrap(true);
        descripcionPregunta.setRows(5);
        descripcionPregunta.setWrapStyleWord(true);
        jScrollPane2.setViewportView(descripcionPregunta);

        añadirPregunta.setText("Agregar Pregunta");
        añadirPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirPreguntaActionPerformed(evt);
            }
        });

        jLabel11.setText("Tipo");

        buttonGroup1.add(creaVerdadero);
        creaVerdadero.setText("Verdadero");

        buttonGroup1.add(creaFalso);
        creaFalso.setText("Falso");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(creaVerdadero)
                                    .addComponent(creaFalso)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(cb_preguntasSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(añadirPregunta)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_preguntasSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(creaVerdadero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(creaFalso)))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(añadirPregunta)
                .addGap(42, 42, 42))
        );

        jTabbedPane1.addTab("Agregar Preguntas", jPanel5);

        jLabel10.setText("Clase:");

        jLabel12.setText("Cantidad de Preguntas");

        crearExamenSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        cb_ExamenesSelectClase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_ExamenesSelectClaseItemStateChanged(evt);
            }
        });

        jButton2.setText("Crear Examen");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crearExamenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_ExamenesSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(cb_ExamenesSelectClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(54, 54, 54)
                        .addComponent(crearExamenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(104, 104, 104))
        );

        jTabbedPane1.addTab("Crear Examen", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout.png"))); // NOI18N
        jMenu1.setText("Cerrar Sesion ");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salir.png"))); // NOI18N
        jMenu2.setText("Salir");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        panelAdmin.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout panelAdminLayout = new javax.swing.GroupLayout(panelAdmin.getContentPane());
        panelAdmin.getContentPane().setLayout(panelAdminLayout);
        panelAdminLayout.setHorizontalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelAdminLayout.setVerticalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pantallaAlumno.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        pantallaAlumno.setResizable(false);

        jPanel9.setBackground(new java.awt.Color(109, 183, 212));

        jlistDisponibles.setModel(new DefaultListModel());
        jlistDisponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistDisponiblesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jlistDisponibles);

        jlistTomados.setModel(new DefaultListModel());
        jlistTomados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistTomadosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jlistTomados);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Examenes Disponibles:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Examenes Realizados:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Hola");

        labelNombreAlumno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelNombreAlumno.setForeground(new java.awt.Color(255, 255, 255));
        labelNombreAlumno.setText("jLabel19");

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exagif.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelNombreAlumno)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(labelNombreAlumno))
                .addGap(29, 29, 29)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout.png"))); // NOI18N
        jMenu3.setText("Cerrar Sesion");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu3);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salir.png"))); // NOI18N
        jMenu4.setText("Salir");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu4);

        pantallaAlumno.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout pantallaAlumnoLayout = new javax.swing.GroupLayout(pantallaAlumno.getContentPane());
        pantallaAlumno.getContentPane().setLayout(pantallaAlumnoLayout);
        pantallaAlumnoLayout.setHorizontalGroup(
            pantallaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pantallaAlumnoLayout.setVerticalGroup(
            pantallaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pantallaAlumnoLayout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pantallaExamen.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        pantallaExamen.setUndecorated(true);
        pantallaExamen.setResizable(false);

        jPanel8.setBackground(new java.awt.Color(109, 183, 212));

        examenNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/next.png"))); // NOI18N
        examenNext.setText("Siguiente Pregunta");
        examenNext.setEnabled(false);
        examenNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examenNextActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("¡Pasar a la siguiente pregunta le impedira volver atras y cambiar su respuesta!");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Pregunta:");

        labelNPregunta.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelNPregunta.setForeground(new java.awt.Color(255, 255, 255));
        labelNPregunta.setText("n");

        labelPreguntaExamen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pregunta.png"))); // NOI18N
        labelPreguntaExamen.setText("preeguntads");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelPreguntaExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelPreguntaExamen, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );

        labelTitPregunta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTitPregunta.setForeground(new java.awt.Color(255, 255, 255));
        labelTitPregunta.setText("Titulo Pregunta");

        jrbTrue.setBackground(new java.awt.Color(109, 183, 212));
        bgroupExamen.add(jrbTrue);
        jrbTrue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrbTrue.setForeground(new java.awt.Color(255, 255, 255));
        jrbTrue.setText("Verdadero");
        jrbTrue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTrueActionPerformed(evt);
            }
        });

        jrbFalse.setBackground(new java.awt.Color(109, 183, 212));
        bgroupExamen.add(jrbFalse);
        jrbFalse.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrbFalse.setForeground(new java.awt.Color(255, 255, 255));
        jrbFalse.setText("Falso");
        jrbFalse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFalseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelNPregunta))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(labelTitPregunta)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 91, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(132, 132, 132))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(315, 315, 315)
                                .addComponent(examenNext))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jrbTrue)
                                .addGap(82, 82, 82)
                                .addComponent(jrbFalse)))
                        .addGap(57, 57, 57))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(labelNPregunta))
                .addGap(58, 58, 58)
                .addComponent(labelTitPregunta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel14)
                .addGap(51, 51, 51)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(examenNext)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbTrue)
                            .addComponent(jrbFalse))
                        .addGap(2, 2, 2)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pantallaExamenLayout = new javax.swing.GroupLayout(pantallaExamen.getContentPane());
        pantallaExamen.getContentPane().setLayout(pantallaExamenLayout);
        pantallaExamenLayout.setHorizontalGroup(
            pantallaExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pantallaExamenLayout.setVerticalGroup(
            pantallaExamenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel11.setBackground(new java.awt.Color(109, 183, 212));

        detallNotaList.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(detallNotaList);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout detalleNotaLayout = new javax.swing.GroupLayout(detalleNota.getContentPane());
        detalleNota.getContentPane().setLayout(detalleNotaLayout);
        detalleNotaLayout.setHorizontalGroup(
            detalleNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        detalleNotaLayout.setVerticalGroup(
            detalleNotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        principalIngresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/login.png"))); // NOI18N
        principalIngresar.setText("Ingresar");
        principalIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principalIngresarActionPerformed(evt);
            }
        });
        getContentPane().add(principalIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 286, -1, -1));

        princilalRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/registro.png"))); // NOI18N
        princilalRegistro.setText("Registrarse");
        princilalRegistro.setName("principal.registro"); // NOI18N
        princilalRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                princilalRegistroActionPerformed(evt);
            }
        });
        getContentPane().add(princilalRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 286, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user.png"))); // NOI18N
        jLabel1.setText("Login");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 81, 70, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pass.png"))); // NOI18N
        jLabel5.setText("Password");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 151, 100, -1));
        getContentPane().add(principalPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 171, 170, -1));

        principalLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principalLoginActionPerformed(evt);
            }
        });
        getContentPane().add(principalLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 101, 170, -1));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bground.jpg"))); // NOI18N
        jLabel20.setText("jLabel20");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void princilalRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_princilalRegistroActionPerformed
        pantallaRegistro.pack();
        pantallaRegistro.setModal(true);
        pantallaRegistro.setLocationRelativeTo(this);
        pantallaRegistro.setVisible(true);
    }//GEN-LAST:event_princilalRegistroActionPerformed

    private void registroRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroRegistrarActionPerformed
        String nombre, pass, login;
        int id = (int) clAlumno.countDocuments();
        nombre = registroNombre.getText();
        pass = registroPass.getText();
        login = registroLogin.getText();
        if (nombre.equals("") || pass.equals("") || login.equals("")) {
            JOptionPane.showMessageDialog(pantallaRegistro, "Debe de llenar todos los campos",
                    "Error!", JOptionPane.INFORMATION_MESSAGE);
        }
        Alumno alumno = new Alumno(nombre, login, pass, id);
        try {
            clAlumno.insertOne(alumno);
            JOptionPane.showMessageDialog(pantallaRegistro, "Usuario Ingresado exitosamente",
                    "Correcto!", JOptionPane.INFORMATION_MESSAGE);
            pantallaRegistro.setVisible(false);
            registroLogin.setText("");
            registroNombre.setText("");
            registroPass.setText("");
            this.setLocationRelativeTo(this);
            this.setVisible(true);
        } catch (com.mongodb.MongoWriteException we) {
            String errormsg;
            if (we.getCode() == 11000) {
                errormsg = "El Login ingresado ya existe favor ingrese uno nuevo";
            } else {
                registroNombre.setText("");
                registroPass.setText("");
                errormsg = "Ocurrio un error al intentar ingresar el usuario, favor intente nuevamente";
            }
            registroLogin.setText("");
            JOptionPane.showMessageDialog(pantallaRegistro, errormsg, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_registroRegistrarActionPerformed

    private void principalIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principalIngresarActionPerformed
        String pass = null;
        try {
            pass = getUserPassword(principalLogin.getText());
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(pantallaRegistro, "Login no encontrado. Favor vuelva a intentar.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            principalLogin.setText("");
            principalPassword.setText("");
        } finally {
            if (pass != null) {
                if ((sha(principalPassword.getText())).equals(pass)) {
                    alumnoIngresado = clAlumno.find(eq("login", principalLogin.getText())).first();
                    if (alumnoIngresado.getLogin().equals("Admin")) {
                        panelAdmin.pack();
                        panelAdmin.setLocationRelativeTo(this);
                        panelAdmin.setVisible(true);
                        this.setVisible(false);
                        llenarArbolClases();
                    } else {
                        this.setVisible(false);
                        mostrarPantallaAlumno();
                    }
                } else {
                    JOptionPane.showMessageDialog(pantallaRegistro, "Contraseña Incorrecta, Favor Vuelva a intentar.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    principalPassword.setText("");
                }
                principalLogin.setText("");
                principalPassword.setText("");
            }
        }
    }//GEN-LAST:event_principalIngresarActionPerformed

    private void principalLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principalLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_principalLoginActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex() == 2) {
            cb_preguntasSelectClase.setModel(llenarComboBoxClases());
        } else if(jTabbedPane1.getSelectedIndex() == 3) {
            cb_ExamenesSelectClase.setModel(llenarComboBoxClases());
            cb_ExamenesSelectClase.setSelectedItem(null);
        } else if (jTabbedPane1.getSelectedIndex() == 0 && flagModificacion) {
            llenarArbolClases();
            flagModificacion = false;
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void añadirClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirClaseActionPerformed
        String nombre = nuevaClaseNombre.getText();
        if (nombre.equals("")) {
            return;
        }
        int id;
        id = (int) clClase.countDocuments() + 1;
        Clase clase = new Clase(id, nombre);
        try {
            clClase.insertOne(clase);
        } catch (com.mongodb.MongoWriteException we) {
            JOptionPane.showMessageDialog(pantallaRegistro, "Ocurrio un error al intentar crear la pregunta"
                    + ", Favor vuelva a intentar", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } finally {
            JOptionPane.showMessageDialog(pantallaRegistro, "Clase " + nombre + " fue creada exitosamente.",
                "Exito", JOptionPane.INFORMATION_MESSAGE);
            flagModificacion = true;
            nuevaClaseNombre.setText("");
        }
    }//GEN-LAST:event_añadirClaseActionPerformed

    private void añadirPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirPreguntaActionPerformed
        if (cb_preguntasSelectClase.getSelectedItem() != null) {
            if (tituloPregunta.getText().equals("")) {
                return;
            }
            if (descripcionPregunta.getText().equals("")) {
                return;
            }
            if (!creaFalso.isSelected() && !creaVerdadero.isSelected()) {
                return;
            }
            Clase clase = Clase.class.cast(cb_preguntasSelectClase.getSelectedItem());
            int id = (int) clPregunta.countDocuments() + 1;
            Pregunta preg = new Pregunta(id, clase.getIdClase(),
                tituloPregunta.getText(), descripcionPregunta.getText(), creaVerdadero.isSelected());
            try {
                clPregunta.insertOne(preg);
            } catch (com.mongodb.MongoWriteException we) {
                JOptionPane.showMessageDialog(pantallaRegistro, "No fue posible guardar la pregunta, Favor"
                        + " vuelva a intentar", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(pantallaRegistro, "Pregunta añadida exitosamente",
                "Exito", JOptionPane.INFORMATION_MESSAGE);
            flagModificacion = true;
            tituloPregunta.setText("");
            descripcionPregunta.setText("");
            cb_preguntasSelectClase.setSelectedItem(null);
            buttonGroup1.clearSelection();
        }
    }//GEN-LAST:event_añadirPreguntaActionPerformed

    private void cb_ExamenesSelectClaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_ExamenesSelectClaseItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (cb_ExamenesSelectClase.getSelectedItem() != null) {
                List list = clPregunta.find(eq("idClase",
                        Clase.class.cast(cb_ExamenesSelectClase.getSelectedItem()).getIdClase()))
                        .into(new ArrayList<>());
                int currValue = (int) crearExamenSpinner.getModel().getValue();
                if (currValue > list.size()) {
                    currValue = list.size();
                } else if (currValue == 0 && currValue != list.size()) {
                    currValue = 1;
                }
                int min = list.isEmpty() ? 0 : 1;
                SpinnerNumberModel modelo = new SpinnerNumberModel(currValue, min, list.size(), 1);
                crearExamenSpinner.setModel(modelo);
            }
        }
    }//GEN-LAST:event_cb_ExamenesSelectClaseItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (cb_ExamenesSelectClase.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(pantallaRegistro, "Debe de seleccionar una clase de las clases "
                    + " disponibles", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if ((int) crearExamenSpinner.getModel().getValue() == 0) {
            JOptionPane.showMessageDialog(pantallaRegistro, "La Clase seleccionada no tiene preguntas "
                    + "disponibles. O añada preguntas o seleccione otra clase.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int idex = (int) clExamen.countDocuments() + 1;
        int npreguntas = (int)crearExamenSpinner.getValue();
        Examen examen = new Examen(idex,
                Clase.class.cast(cb_ExamenesSelectClase.getSelectedItem()).getIdClase(), npreguntas);
        try {
            clExamen.insertOne(examen);
            JOptionPane.showMessageDialog(pantallaRegistro, "Examen creado exitosamente",
                "Exito", JOptionPane.INFORMATION_MESSAGE);
            flagModificacion = true;
        } catch (com.mongodb.MongoWriteException we) {
            String errormsg;
            if (we.getCode() == 11000) {
                errormsg = "Actualmente ya existe un examen creado para la clase " + 
                        Clase.class.cast(cb_ExamenesSelectClase.getSelectedItem()).getNombreClase();
            } else {
                registroNombre.setText("");
                registroPass.setText("");
                errormsg = "Ocurrio un error al intentar ingresar el usuario, favor intente nuevamente";
            }
            JOptionPane.showMessageDialog(pantallaRegistro, errormsg,
                        "Error", JOptionPane.ERROR_MESSAGE);
        }
        cb_ExamenesSelectClase.setSelectedItem(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        if (evt.getClickCount() == 2) {
            int row = jTree1.getClosestRowForLocation(evt.getX(), evt.getY());
            jTree1.setSelectionRow(row);
            Object v1 = jTree1.getSelectionPath().getLastPathComponent();
            DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) v1;
            if (nodoSeleccionado.getUserObject() instanceof Pregunta) {
                Pregunta pregunta = ((Pregunta) nodoSeleccionado.getUserObject());
                labelDetallePregunta.setText("<html>" + 
                        pregunta.getDescripcion() + "<br>" + "Respuesta: " + 
                        (pregunta.isTipo() ? "Verdadero" : "Falso" + "</html>"));
            } else {
                labelDetallePregunta.setText("");
            }
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void examenNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examenNextActionPerformed
        if (bgroupExamen.getSelection() != null && !preguntas.isEmpty()) {
            Pregunta preguntaAct = preguntas.pop();
            if (jrbTrue.isSelected() == preguntaAct.isTipo()) {//Evalua que la respuesta sea correcta
                alumnoIngresado.getNotas().get(0).sumarNota(puntosPorpregunta);
            }
            if (preguntas.size() >= 1) {
                examenNext.setEnabled(false);
                Pregunta pregunta = preguntas.peek();
                bgroupExamen.clearSelection();
                labelTitPregunta.setText(pregunta.getTitulo());
                labelNPregunta.setText("" + (Integer.parseInt(labelNPregunta.getText()) + 1));
                labelPreguntaExamen.setText("<html>" + pregunta.getDescripcion() + "</html>");
            }
            if (preguntas.size() == 1) {
                examenNext.setText("Enviar Examen");
            }
            PreguntaResuelta pr = new PreguntaResuelta(
                    preguntaAct.getIdPregunta(), jrbTrue.isSelected());
            alumnoIngresado.getNotas().get(0).getPreguntas().add(pr);
        } 
        if (bgroupExamen.getSelection() != null) {
            try {
                alumnoIngresado = clAlumno.findOneAndReplace(eq("login", alumnoIngresado.getLogin()),
                        alumnoIngresado,
                        new FindOneAndReplaceOptions().returnDocument(ReturnDocument.AFTER));
                JOptionPane.showMessageDialog(pantallaExamen, "Usted obtuvo " + 
                        alumnoIngresado.getNotas().get(0).getNota() + " puntos de " +
                        (jlistDisponibles.getSelectedValue().getCantPreguntas() * 5),
                        "Nota", JOptionPane.INFORMATION_MESSAGE);
                pantallaExamen.setVisible(false);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(pantallaRegistro, "Ocurrio un erro al guardar su examen"
                        + " debera repetirlo", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } finally {
                mostrarPantallaAlumno();
            }
        }
    }//GEN-LAST:event_examenNextActionPerformed

    private void jrbTrueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTrueActionPerformed
        examenNext.setEnabled(true);
    }//GEN-LAST:event_jrbTrueActionPerformed

    private void jrbFalseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFalseActionPerformed
        examenNext.setEnabled(true);
    }//GEN-LAST:event_jrbFalseActionPerformed

    private void jlistDisponiblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistDisponiblesMouseClicked
        if (evt.getClickCount() == 2) {
            if (jlistDisponibles.getSelectedValue() != null) {
                if (JOptionPane.showConfirmDialog(pantallaAlumno, 
                        "¿Esta seguro que desea realizar el examen con ID " 
                                + jlistDisponibles.getSelectedValue().getIdExamen() 
                                + "?", "Confirmar", JOptionPane.YES_NO_OPTION, 
                                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    pantallaAlumno.setVisible(false);
                    mostrarExamen(jlistDisponibles.getSelectedValue().getIdClase(),
                            jlistDisponibles.getSelectedValue().getIdExamen());
                }
            }
        }
    }//GEN-LAST:event_jlistDisponiblesMouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        panelAdmin.dispose();
        this.pack();
        this.setVisible(true);
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        if (evt.getClickCount() == 2) {
            panelAdmin.dispose();
            this.pack();
            this.setVisible(true);
        }
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        if (evt.getClickCount() == 2) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        if (evt.getClickCount() == 2) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        if (evt.getClickCount() == 2) {
            pantallaAlumno.dispose();
            this.pack();
            this.setVisible(true);
        }
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jlistTomadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistTomadosMouseClicked
        if (evt.getClickCount() == 2) {
            if (jlistDisponibles.getSelectedValue() != null) {
                mostrarDetalleNota(jlistTomados.getSelectedValue());
                //Pantalla Resultado detalleNota()
            }
        }
    }//GEN-LAST:event_jlistTomadosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
//<editor-fold defaultstate="collapsed" desc=" Variables que me estorban">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton añadirClase;
    private javax.swing.JButton añadirPregunta;
    private javax.swing.ButtonGroup bgroupExamen;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<Clase> cb_ExamenesSelectClase;
    private javax.swing.JComboBox<Clase> cb_preguntasSelectClase;
    private javax.swing.JRadioButton creaFalso;
    private javax.swing.JRadioButton creaVerdadero;
    private javax.swing.JSpinner crearExamenSpinner;
    private javax.swing.JTextArea descripcionPregunta;
    private javax.swing.JList<PreguntaResuelta> detallNotaList;
    private javax.swing.JDialog detalleNota;
    private javax.swing.JButton examenNext;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JList<Examen> jlistDisponibles;
    private javax.swing.JList<Nota> jlistTomados;
    private javax.swing.JRadioButton jrbFalse;
    private javax.swing.JRadioButton jrbTrue;
    private javax.swing.JLabel labelDetallePregunta;
    private javax.swing.JLabel labelNPregunta;
    private javax.swing.JLabel labelNombreAlumno;
    private javax.swing.JLabel labelPreguntaExamen;
    private javax.swing.JLabel labelTitPregunta;
    private javax.swing.JTextField nuevaClaseNombre;
    private javax.swing.JDialog panelAdmin;
    private javax.swing.JDialog pantallaAlumno;
    private javax.swing.JDialog pantallaExamen;
    private javax.swing.JDialog pantallaRegistro;
    private javax.swing.JButton princilalRegistro;
    private javax.swing.JButton principalIngresar;
    private javax.swing.JTextField principalLogin;
    private javax.swing.JPasswordField principalPassword;
    private javax.swing.JTextField registroLogin;
    private javax.swing.JTextField registroNombre;
    private javax.swing.JPasswordField registroPass;
    private javax.swing.JButton registroRegistrar;
    private javax.swing.JTextArea tituloPregunta;
    // End of variables declaration//GEN-END:variables
      //</editor-fold>
    String getUserPassword(String user) throws NullPointerException {
        return clAlumno.find(eq("login", user)).first().getPass();
    }
    
    String sha(String pass){
        final MessageDigest digest;
        try {
            digest = MessageDigest.getInstance("SHA3-256");
            final byte[] hashbytes = digest.digest(
                pass.getBytes(StandardCharsets.UTF_8));
            String sha3Hex;
            sha3Hex = bytesToHex(hashbytes);
            return sha3Hex;
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Alumno.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }
    
    String bytesToHex(byte[] hash) {
        StringBuilder hexString = new StringBuilder(2 * hash.length);
        for (int i = 0; i < hash.length; i++) {
            String hex = Integer.toHexString(0xff & hash[i]);
            if (hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        return hexString.toString();
    }
    
    DefaultComboBoxModel llenarComboBoxClases() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        ArrayList<Clase> clases = clClase.find().into(new ArrayList<>());
        clases.forEach(clase -> modelo.addElement(clase));
        return modelo;
    }
    
    Stack<Pregunta> generarExamen(int idClase) {
        Bson filter = eq("idClase", idClase);
        int cantPreguntas = 0;
        try {
            cantPreguntas = clExamen.find(filter).first().getCantPreguntas();
        } catch (Exception e) {
            
        }
        List preg = 
                clPregunta.find(filter).into(new ArrayList<>());
        Collections.shuffle(preg);
        Stack<Pregunta> stck = new Stack<>();
        stck.addAll(preg.subList(0, cantPreguntas));
        return stck;
    }
    
    Map<Integer, String> generateMap() {
        MongoCollection<Document> collection = database.getCollection("Examenes");
        Bson pipeline = lookup("Clases", "idClase", "id", "Clase");
        Map<Integer, String> map =  new HashMap<>();
        ArrayList<Document> x = collection.aggregate(Collections.singletonList(pipeline))
                .into(new ArrayList<Document>());
        //x.forEach(pr -> ((Document)pr.get("Clase")).get(pr));
        int id;
        String nombre;
        Document segundoDoc;
        for (Document document : x) {
            segundoDoc = ((Document)((ArrayList)document.get("Clase")).get(0));
            id = (int) document.get("id");
            nombre = (String) segundoDoc.get("nombreClase");
            map.put(id, nombre);
        }
        return map;
    }
    
    Map<Integer, Pregunta> generateMapPreguntas(Nota nota) {
        Map<Integer, Pregunta> map = new HashMap<>();
        for (PreguntaResuelta pregunta : nota.getPreguntas()) {
            Pregunta preguntaqu = clPregunta.find(eq("id",pregunta.getIdPregunta())).first();
            map.put(pregunta.getIdPregunta(), preguntaqu);
        }
        return map;
    }
    
    void mostrarPantallaAlumno() {
        Map<Integer, String> map =  new HashMap<>();
        map = generateMap();
        ExamenDisponibleRenderer dispRender = new ExamenDisponibleRenderer();
        dispRender.setMap(map);
        jlistDisponibles.setCellRenderer(dispRender);
        //jlist Disonibles
        DefaultListModel<Examen> modelo = new DefaultListModel<>();
        ArrayList<Integer> sublist = new ArrayList<>();
        alumnoIngresado.getNotas().forEach(nota -> sublist.add(nota.getIdExamen()));
        ArrayList<Examen> subExamenes = clExamen.find().into(new ArrayList<Examen>()); 
        subExamenes.removeIf(exa -> (sublist.contains(exa.getIdExamen())));
        modelo.addAll(subExamenes);
        jlistDisponibles.setModel(modelo);
        //jlistTomados
        DefaultListModel<Nota> modelo2 = new DefaultListModel();
        modelo2.addAll(alumnoIngresado.getNotas());
        ExamenTomadoRenderer tomaRender = new ExamenTomadoRenderer();
        tomaRender.setMap(map);
        jlistTomados.setCellRenderer(tomaRender);
        jlistTomados.setModel(modelo2);
        pantallaAlumno.pack();
        labelNombreAlumno.setText(alumnoIngresado.getNombre());
        pantallaAlumno.setLocationRelativeTo(this);
        pantallaAlumno.setVisible(true);
    }
    
    void mostrarExamen(int idClase, int idExamen) {
        alumnoIngresado.getNotas().add(0, new Nota(idExamen, 0));
        preguntas = generarExamen(idClase);
        labelNPregunta.setText("1");
        examenNext.setText("Siguiente Pregunta");
        examenNext.setEnabled(false);
        bgroupExamen.clearSelection();
        Pregunta pregunta = preguntas.peek();
        labelTitPregunta.setText(pregunta.getTitulo());
        labelPreguntaExamen.setText(pregunta.getDescripcion());
        pantallaExamen.pack();
        pantallaExamen.setModal(true);
        pantallaExamen.setLocationRelativeTo(this);
        pantallaExamen.setVisible(true);
    }
    
    void mostrarDetalleNota(Nota nota) {
        Map<Integer, Pregunta> map =  new HashMap<>();
        map = generateMapPreguntas(nota);
        DefaultListModel<PreguntaResuelta> modelo = new DefaultListModel<>();
        
        modelo.addAll(nota.getPreguntas());
        detallNotaList.setModel(modelo);
        detalleNota.setLocationRelativeTo(pantallaAlumno);
        detalleNota.pack();
        detalleNota.setVisible(true);
    }
            
    
    void llenarArbolClases() {
        ArrayList<Clase> clases = clClase.find().into(new ArrayList<Clase>());
        //ArrayList<Examen> examenes = clExamen.find().into(new ArrayList<Examen>());
        //ArrayList<Pregunta> preguntas = clPregunta.find().into(new ArrayList<Pregunta>());
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Clases");
        DefaultTreeModel modelo = new DefaultTreeModel(root);
        clases.forEach(clase -> root.add(new DefaultMutableTreeNode(clase)));
        for (int i = 0; i < root.getChildCount(); i++) {
            ArrayList<Pregunta> preguntas = clPregunta.find(eq("idClase",
                    ((Clase)(((DefaultMutableTreeNode)root.getChildAt(i)).getUserObject())).getIdClase()))
                    .into(new ArrayList<Pregunta>());
            if (!preguntas.isEmpty()) {
                DefaultMutableTreeNode preg = new DefaultMutableTreeNode("Preguntas");
                preguntas.forEach(pregunta -> preg.add(new DefaultMutableTreeNode(pregunta)));
                ((DefaultMutableTreeNode)root.getChildAt(i)).add(preg);
            }
            Examen ex = clExamen.find(eq("idClase",
                    ((Clase)((DefaultMutableTreeNode)root.getChildAt(i)).getUserObject()).getIdClase()))
                    .first();
            if (ex != null) {
                DefaultMutableTreeNode exa = new DefaultMutableTreeNode("Examen");
                exa.add(new DefaultMutableTreeNode(ex));
                ((DefaultMutableTreeNode)root.getChildAt(i)).add(exa);
            }
        }
        modelo.reload();
        jTree1.setModel(modelo);
    }
    WindowListener exitListener = new WindowAdapter() {

    @Override
    public void windowClosing(WindowEvent e) {
        int confirm = JOptionPane.showOptionDialog(
             e.getWindow(), "¿Esta seguro que quiere salir?", 
             "Salir", JOptionPane.YES_NO_OPTION, 
             JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (confirm == 0) {
           System.exit(0);
        }
    }
};
    
}
